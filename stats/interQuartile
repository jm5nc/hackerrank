#!/bin/python3

import math
import os
import random
import re
import sys


def median(arr):   
    
    arr.sort()
    n = len(arr)
    if n % 2 != 0:
        return arr[n // 2]
    else:
        idx = int(n / 2)
        return ((arr[idx]) + (arr[idx -1])) / 2
    
        
def findLeftRight(arr):
    #returns tuple of sub-arrays, central val not inc if n odd

    arr.sort()
    n = len(arr)
    if len(arr) % 2 == 0: #then even
        return arr[:(n//2)], arr[(n//2):]
    else: #odd
        return arr[:(n//2)], arr[(n//2)+1:]
            
    
def quartiles(arr):
    
    l, r  = findLeftRight(arr)
    q1 = median(l)
    q2 = median(arr)
    q3 = median(r)
    
    return int(q1), int(q2), int(q3)
    
  
def interQuartile(values, freqs):
    # Print your answer to 1 decimal place within this function
    arr = []
    for i in range(len(values)):
        f = freqs[i]
        for _ in range(f):
            arr.append(values[i])
            
    q1, median, q3 = quartiles(arr)
    iqr = q3 - q1
    
    print(f"{iqr:.1f}")
        
    

if __name__ == '__main__':
    n = int(input().strip())

    val = list(map(int, input().rstrip().split()))

    freq = list(map(int, input().rstrip().split()))

    interQuartile(val, freq)
