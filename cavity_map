#!/bin/python3

import math
import os
import random
import re
import sys

#
# Complete the 'cavityMap' function below.
#
# The function is expected to return a STRING_ARRAY.
# The function accepts STRING_ARRAY grid as parameter.

# https://www.hackerrank.com/challenges/cavity-map/problem?isFullScreen=true

def cavityMap(grid):
    
    if len(grid) < 3:
        return grid

    new = []
    new.append(grid[0])
    for i in range(1,len(grid)-1):
        row = grid[i][0]
        for j in range(1,len(grid)-1):
            if grid[i][j] > grid[i+1][j] and grid[i][j] > grid[i-1][j] and grid[i][j] > grid[i][j+1] and grid[i][j] > grid[i][j-1]:
                row += "X" 
            else:
                row += grid[i][j] 
        row += grid[i][len(grid)-1]                
        new.append(row)
    new.append(grid[len(grid)-1])
    
    return new
    

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    n = int(input().strip())

    grid = []

    for _ in range(n):
        grid_item = input()
        grid.append(grid_item)

    result = cavityMap(grid)

    fptr.write('\n'.join(result))
    fptr.write('\n')

    fptr.close()
